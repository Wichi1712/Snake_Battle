<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_red_snake</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemigo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creación del cuerpo

//armas0 ==&gt; "balas";
//armas1 ==&gt; "bomba";
//armas2 ==&gt; "minas";
//armas3 ==&gt; "minas";

//variables
armas = 0;
velocidad = 3;


/*Este bloque permite crear un color aleatorio*/
//randomize();
//image_blend = make_color_rgb( random(255), random(255), random(255));//color aleatorio
/*Fin color aleatorio*/

//Creacion del cuerpo
hijos = 10;//cantidad de cuerpo

for (i=1;i&lt;hijos;i++)
{
hijo[i] = instance_create(x,y,obj_red_body);

     if (i == 1)
     {
     hijo[i].padre = obj_red_snake;
     }
     else{hijo[i].padre = hijo[i-1];}
}

alarm[0] = 360;//alarma para cambio de armas

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Random de cambio de armas
armas = irandom(3);
//armas[] = random(armas[]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///velocidad y dirección de la cabeza

//objeto = random( choose( obj_player, obj_green, obj_blue, obj_red_snake ));

if distance_to_object( obj_player)&gt;=400
{
speed = velocidad/velocidad;//velocidad inicial
}

//angulo de la imagen
image_angle = point_direction(x,y, obj_player.x,obj_player.y);

/*inicia el seguimiento a un objeto determinado
en este caso a player*/ 
if (distance_to_object( obj_player)&gt;=80 &amp;&amp; distance_to_object( obj_player)&lt;=300)
  {
    //mp_potential_step_object( obj_player.x, obj_player.y, velocidad, solid);
    mp_potential_step(obj_player.x, obj_player.y, velocidad, false);
    //speed = 3;//velocidad de seguimiento
  
  }
  else{speed = velocidad-velocidad;}//cancela velocidad

/*fin seguimiento*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control energia y  vidas
//control de energia enemigo red
//if (global.energiared &lt;= 0)
//{
    //global.energiared = 0;
//}
//Control de numero de vidas
if ( global.vidasred = 0)
{
 instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambio de armas y disparo
//Disparo
if (distance_to_object( obj_player)&gt;=80 &amp;&amp; distance_to_object( obj_player)&lt;=600)
{    
    switch (armas)
    {
       case 0:      
                //if ( distance_to_object( obj_player)&lt;80)
          //{
             if ( instance_number( obj_balared )&lt;= 5)
              {
                if ( distance_to_object( obj_balared)&gt;10)
                 {
                   instance_create(x, y, obj_balared);
                 }
              }
          //}
       break;
       
       case 1:
          if ( instance_number( obj_bomba )&lt;= 3)
          {
            if ( distance_to_object( obj_bomba)&gt;10)
             {
              instance_create(x, y, obj_bomba);
             }
          }
       break;
       
       case 2:
          if ( instance_number( obj_misil )&lt;= 5)
          {
            if ( distance_to_object( obj_misil)&gt;10)
             {
              instance_create(x, y, obj_misil);
             }
          }
       break;
       
       case 3:
          if ( instance_number( obj_mina )&lt;= 3)
          {
            if ( distance_to_object( obj_mina)&gt;10)
             {
              instance_create(x, y, obj_mina);
             }
          }
       break;
       //default: STATEMENT;
   }
}

//Reinicio de alarma   
if (alarm[0] = -1)
{
alarm[0] = 360;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parentBala">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reduce energia red
global.energiared -=5;

//if ( global.energiared &lt;= 0)
//{
  //global.vidasred--;
 //instance_destroy();
//}

global.gamescore +=5;

// Hiscore
if (global.gamescore  &gt; global.hiscore)
   {
     global.hiscore = global.gamescore;
     ini_open("score.ini");
     ini_write_real( "score", "hiscore", global.hiscore);
     ini_close();   
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_body_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rebota
move_bounce_all(true);


///si colisiona, serpiente crece

//hijo [hijos] = instance_create(hijo[hijos-1].x, hijo[hijos-1].y, obj_red_body);
//hijo [hijos].padre = hijo[hijos-1];
//hijos++;

//Esto para que el player sufra daño siempre que no este en estado transparente
//if ( global.danoplayer = true)
 //{
   //global.energiaplayer -=1;
 //}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibuja barra de energia red
//Dibujo de datos de enenmigo
draw_self();//Esto es necesario para que el evento draw se dibuje a si mismo

//Dibuja barra de energia enemigo
draw_set_font( font_game);
draw_set_color( c_yellow);
draw_text( x, y - 50, "Red  " + string(global.energiared)+ "/100");
draw_set_color( c_lime);
draw_rectangle( x, y - 30, x + global.energiared, y - 40, 0);

//Dibuja texto de armas
switch(armas)
{
case 0:
txt = "Bala";
break;

case 1:
txt = "Bomba";
break;

case 2:
txt = "Misil";
break;

case 3:
txt = "Mina";
break;
}
//draw_text( x, y - 90, "Arma  " + string(txt));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
