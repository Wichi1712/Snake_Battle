<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creaci칩n del cuerpo
//VAriables
giro = 5;
velocidad = 5;
veloMax = 11;
image_angle = 0;

//Creacion del cuerpo

hijos = 15;//cantidad de cuerpo

for (i=1;i&lt;hijos;i++)
{
 hijo[i] = instance_create(x,y,obj_body_player);
 
/* Si i = 1 entonces el padre ser치 el obj_player de lo contrario
el padre ser치 hijo - 1*/
   if (i == 1)
    {
     hijo[i].padre = obj_player;
    }
    else{hijo[i].padre = hijo[i-1];}
}
//fin crear cuerpo

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///velocidad y direcci칩n de la cabeza

//speed = 1;

key_avanzar = keyboard_check( vk_up);
key_detener = keyboard_check( vk_down);
key_maxvelocidad = keyboard_check( vk_space);
key_izquierda = keyboard_check( vk_left);
key_derecha = keyboard_check( vk_right);



if ( key_avanzar)
{
//direction = image_angle;
image_angle = direction;
speed = velocidad;
}
else{ speed = 1;}

if ( key_izquierda)
{
//direction = image_angle;
image_angle = direction;
//image_angle +=giro;
direction +=giro;
}

if ( key_derecha)
{
//direction = image_angle;
image_angle = direction;
//image_angle -=giro;
direction -=giro;
}

if ( key_detener)
{
speed = 0;
}

if ( key_maxvelocidad)
{
speed = veloMax;
effect_create_above( ef_spark,x,y,3,c_white );
}

/* Aqui mantenemos el nivel de energia del player en cero, para
que no sea menor que cero*/
//if (global.energiaplayer &lt;= 0)
//{
   //if ( global.danoplayer = true)
    //{global.energiaplayer = 0;}
//}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disparo

disparo = ord("A");
if ( instance_exists( obj_player) &amp;&amp; global.vidasplayer &gt;0)
{
    //Disparo al pulsar la tecla
   //if ( keyboard_check_pressed ( ord("A")))
   //Disparo continuo manteniendo la tecla pulsada
   if ( distance_to_object( obj_bala) &gt; 10 &amp;&amp; keyboard_check ( ord("A")))
      {
        instance_create( x, y, obj_bala);
      }
}

obj_bala.speed = 8;//LE DAMOS LA VELOCIDAD AL OBJETO BALA

//obj_bala.image_angle = image_angle;
//obj_bala.image_angle = point_direction(x,y,obj_enemigo.x,obj_enemigo.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_solido">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rebote
move_bounce_solid(true);
/*image_angle es para que la cabeza de la serpiente
cambie de de acuerdo a la direccion hacia donde reboto*/
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bodyEnemigo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rebota
//move_bounce_all(true);
speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemigo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rebota
speed = 0;
//move_bounce_all(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambiamos direccion de acuerdo al angulo de la imagen;
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujo de datos de player
//Esto es necesario para que el evento draw se dibuje a si mismo
draw_self();

//Dibuja barra de energia
draw_set_font( font_game);
draw_set_color( c_yellow);
draw_text( x + 30, y - 65, "Player");
draw_text( x + 30, y - 50, string(global.energiaplayer)+ "/200");
draw_set_color( c_lime);
draw_rectangle( x, y - 30, x + global.energiaplayer, y - 40, 0);

//draw_sprite_ext( spr_player, 0, x, y, 1, 1, image_angle,-1,1);
//draw_rectangle( x, y, x +20, y +20, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
